{"version":3,"file":"main.js","mappings":"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","sources":["webpack://nestjs-api-test/./apps/api/src/app/app.module.ts","webpack://nestjs-api-test/./apps/api/src/app/auth/auth.controller.ts","webpack://nestjs-api-test/./apps/api/src/app/auth/auth.module.ts","webpack://nestjs-api-test/./apps/api/src/app/auth/auth.service.ts","webpack://nestjs-api-test/./apps/api/src/app/bookmark/bookmark.controller.ts","webpack://nestjs-api-test/./apps/api/src/app/bookmark/bookmark.module.ts","webpack://nestjs-api-test/./apps/api/src/app/bookmark/bookmark.service.ts","webpack://nestjs-api-test/./apps/api/src/app/database/database-connection.service.ts","webpack://nestjs-api-test/./apps/api/src/app/entities/abstract.entity.ts","webpack://nestjs-api-test/./apps/api/src/app/entities/user.entity.ts","webpack://nestjs-api-test/./apps/api/src/app/user/user.controller.ts","webpack://nestjs-api-test/./apps/api/src/app/user/user.module.ts","webpack://nestjs-api-test/./apps/api/src/app/user/user.service.ts","webpack://nestjs-api-test/./libs/core/src/index.ts","webpack://nestjs-api-test/./libs/core/src/lib/config/configuration.ts","webpack://nestjs-api-test/./libs/core/src/lib/config/validation.ts","webpack://nestjs-api-test/./libs/core/src/lib/core.module.ts","webpack://nestjs-api-test/external commonjs \"@nestjs/common\"","webpack://nestjs-api-test/external commonjs \"@nestjs/config\"","webpack://nestjs-api-test/external commonjs \"@nestjs/core\"","webpack://nestjs-api-test/external commonjs \"@nestjs/typeorm\"","webpack://nestjs-api-test/external commonjs \"bcrypt\"","webpack://nestjs-api-test/external commonjs \"class-transformer\"","webpack://nestjs-api-test/external commonjs \"class-validator\"","webpack://nestjs-api-test/external commonjs \"dotenv/config\"","webpack://nestjs-api-test/external commonjs \"joi\"","webpack://nestjs-api-test/external commonjs \"tslib\"","webpack://nestjs-api-test/external commonjs \"typeorm\"","webpack://nestjs-api-test/webpack/bootstrap","webpack://nestjs-api-test/./apps/api/src/main.ts"],"sourcesContent":["import { TypeOrmModule } from '@nestjs/typeorm'\nimport { Module } from '@nestjs/common'\nimport { CoreModule } from '@nestjs-api-test/core'\nimport { UserModule } from './user/user.module'\nimport { AuthModule } from './auth/auth.module'\nimport { BookmarkModule } from './bookmark/bookmark.module'\nimport { DatabaseConnectionService } from './database/database-connection.service'\n\n@Module({\n  imports: [\n    CoreModule,\n    AuthModule,\n    UserModule,\n    BookmarkModule,\n    TypeOrmModule.forRootAsync({\n      useClass: DatabaseConnectionService,\n    }),\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n","import { AuthService } from './auth.service';\nimport { Controller, Post } from '@nestjs/common';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private authService:AuthService) {}\n\n    @Post('signup')\n    signup () {\n        return this.authService.signup()\n    }\n\n    @Post('signin')\n    signin () {\n        return this.authService.signin()\n    }\n\n}\n","import { Module } from \"@nestjs/common\";\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { UserEntity } from '../entities/user.entity';\r\nimport { AuthController } from './auth.controller';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Module({\r\n    imports: [TypeOrmModule.forFeature([UserEntity])],\r\n    controllers: [AuthController],\r\n    providers: [AuthService],\r\n})\r\nexport class AuthModule {}","import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class AuthService {\n  signup() {\n    return {\n      msg: ' i have signed up',\n    }\n  }\n\n  signin() {\n    return {\n      msg: 'i have signed in',\n    }\n  }\n}\n","import { Controller } from '@nestjs/common';\n\n@Controller('bookmark')\nexport class BookmarkController {}\n","import { Module } from '@nestjs/common';\nimport { BookmarkService } from './bookmark.service';\nimport { BookmarkController } from './bookmark.controller';\n\n@Module({\n  providers: [BookmarkService],\n  controllers: [BookmarkController]\n})\nexport class BookmarkModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class BookmarkService {}\n","import { Injectable } from '@nestjs/common'\r\nimport { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm'\r\n\r\n@Injectable()\r\nexport class DatabaseConnectionService implements TypeOrmOptionsFactory {\r\n  createTypeOrmOptions(): TypeOrmModuleOptions {\r\n    return {\r\n      type: 'postgres',\r\n      host: process.env.POSTGRES_HOST,\r\n      port: Number(process.env.POSTGRES_PORT),\r\n      username: process.env.POSTGRES_USER,\r\n      password: process.env.POSTGRES_PASSWORD,\r\n      database: process.env.POSTGRES_DB,\r\n      entities: ['dist/apps/api/src/**/*.entity.js'],\r\n      synchronize: true,\r\n    }\r\n  }\r\n}\r\n","import { BaseEntity, CreateDateColumn, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\r\n\r\nexport abstract class AbstractEntity extends BaseEntity {\r\n    @PrimaryGeneratedColumn()\r\n    id: number\r\n\r\n    @CreateDateColumn()\r\n    createdAt: Date\r\n\r\n    @UpdateDateColumn()\r\n    updatedAt: Date\r\n}","import { Exclude, instanceToPlain } from 'class-transformer'\r\nimport { IsEmail } from 'class-validator'\r\nimport { BeforeInsert, Column, Entity } from 'typeorm'\r\nimport { AbstractEntity } from './abstract.entity'\r\nimport * as bcrypt from 'bcrypt'\r\n\r\n@Entity('users')\r\nexport class UserEntity extends AbstractEntity {\r\n  @Column()\r\n  @IsEmail()\r\n  email: string\r\n\r\n  @Column()\r\n  @Exclude()\r\n  password: string\r\n\r\n  @Column({ default: '', nullable: true })\r\n  firstName?: string | null\r\n\r\n  @Column({ default: '', nullable: true })\r\n  lastName?: string | null\r\n\r\n  @BeforeInsert()\r\n async hashPassword () {\r\n    this.password = await bcrypt.hash(this.password, 10)\r\n }\r\n\r\n    toJSON() {\r\n        return instanceToPlain(this)\r\n    }\r\n}\r\n","import { Controller } from '@nestjs/common';\n\n@Controller('user')\nexport class UserController {}\n","import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\n@Module({\n  controllers: [UserController],\n  providers: [UserService]\n})\nexport class UserModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UserService {}\n","export * from './lib/core.module'\n","export const configuration = () => ({\r\n    environment: process.env.NODE_ENV,\r\n    port: parseInt(process.env.PORT || \"3000\", 10),\r\n  });","import * as Joi from \"joi\";\r\n\r\nexport const validationSchema = Joi.object({\r\n  NODE_ENV: Joi.string().valid(\"development\", \"production\", \"test\").required(),\r\n  PORT: Joi.number().default(3000),\r\n});","import { Module } from '@nestjs/common'\nimport { ConfigModule } from \"@nestjs/config\";\nimport { configuration } from \"./config/configuration\";\nimport { validationSchema } from \"./config/validation\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n      validationSchema\n    })\n  ],\n  controllers: [],\n  providers: [],\n  exports: [],\n})\nexport class CoreModule {}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"bcrypt\");","module.exports = require(\"class-transformer\");","module.exports = require(\"class-validator\");","module.exports = require(\"dotenv/config\");","module.exports = require(\"joi\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger } from '@nestjs/common'\nimport { NestFactory } from '@nestjs/core'\nimport { ConfigService } from '@nestjs/config'\nimport { AppModule } from './app/app.module'\nimport 'dotenv/config'\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule)\n  const config = app.get(ConfigService)\n  const globalPrefix = 'api'\n  app.setGlobalPrefix(globalPrefix)\n  const port = process.env.PORT || 3333\n  await app.listen(port)\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`,\n  )\n  Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix)\n  Logger.log(`Running in ${config.get('environment')} mode`)\n}\n\nbootstrap()\n"],"names":[],"sourceRoot":""}